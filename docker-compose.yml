services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    networks:
      - el-net
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  discovery-server:
    build: infra/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - el-net
    healthcheck:
      test: "curl --fail --silent discovery-server:8761/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 20s
      retries: 5

  config-server:
    build: infra/config-server
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9091
    healthcheck:
      test: "curl --fail --silent config-server:9091/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 30s
      retries: 5

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      el-like-service:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/

  analyzer-server:
    build: stats/analyzer-server
    container_name: el-analyzer-server
    depends_on:
      analyzer-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - el-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://analyzer-db:5432/analyzer-server
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8090
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  collector-server:
    build: stats/collector-server
    container_name: el-collector-server
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - el-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8091
    healthcheck:
      test: "curl --fail --silent localhost:8091/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  aggregator-server:
    build: stats/aggregator-server
    container_name: el-aggregator-server
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - el-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8092
    healthcheck:
      test: "curl --fail --silent localhost:8092/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer-db:
    image: postgres:16.1
    container_name: postgres-el-analyzer-db
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=analyzer-server
    networks:
      - el-net
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  event-db:
    image: postgres:16.1
    container_name: postgres-el-event-db
    networks:
      - el-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=event-server
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  like-db:
    image: postgres:16.1
    container_name: postgres-el-like-db
    networks:
      - el-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=like-server
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  request-db:
    image: postgres:16.1
    container_name: postgres-el-request-db
    networks:
      - el-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=request-server
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  user-db:
    image: postgres:16.1
    container_name: postgres-el-user-db
    networks:
      - el-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=user-server
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  el-user-service:
    build: core/user-server
    container_name: el-user-service
    depends_on:
      user-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user-server
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8093
    healthcheck:
      test: "curl --fail --silent localhost:8093/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  el-event-service:
    build: core/event-server
    container_name: el-event-service
    depends_on:
      event-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/event-server
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8094
    healthcheck:
      test: "curl --fail --silent localhost:8094/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  el-request-service:
    build: core/request-server
    container_name: el-request-service
    depends_on:
      request-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5432/request-server
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8095
    healthcheck:
      test: "curl --fail --silent localhost:8095/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  el-like-service:
    build: core/like-server
    container_name: el-like-service
    depends_on:
      like-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - el-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://like-db:5432/like-server
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8096
    healthcheck:
      test: "curl --fail --silent localhost:8096/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

networks:
  el-net: